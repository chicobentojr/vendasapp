#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaDeVendasAPI.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db086b0a1b40a74edfade9a5b20175fa0b")]
	public partial class DbVendasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertVendaProduto(VendaProduto instance);
    partial void UpdateVendaProduto(VendaProduto instance);
    partial void DeleteVendaProduto(VendaProduto instance);
    partial void InsertFabricante(Fabricante instance);
    partial void UpdateFabricante(Fabricante instance);
    partial void DeleteFabricante(Fabricante instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertVenda(Venda instance);
    partial void UpdateVenda(Venda instance);
    partial void DeleteVenda(Venda instance);
    #endregion
		
		public DbVendasDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db086b0a1b40a74edfade9a5b20175fa0bConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbVendasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbVendasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbVendasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbVendasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<VendaProduto> VendaProdutos
		{
			get
			{
				return this.GetTable<VendaProduto>();
			}
		}
		
		public System.Data.Linq.Table<Fabricante> Fabricantes
		{
			get
			{
				return this.GetTable<Fabricante>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produtos
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<Venda> Vendas
		{
			get
			{
				return this.GetTable<Venda>();
			}
		}
		
		public System.Data.Linq.Table<vwClientesVip> vwClientesVips
		{
			get
			{
				return this.GetTable<vwClientesVip>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAtualizarEstoque")]
		public int spAtualizarEstoque([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProdutoId", DbType="Int")] System.Nullable<int> produtoId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantidade", DbType="Int")] System.Nullable<int> quantidade)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), produtoId, quantidade);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spVendasPorCliente")]
		public ISingleResult<spVendasPorClienteResult> spVendasPorCliente([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClienteId", DbType="Int")] System.Nullable<int> clienteId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clienteId);
			return ((ISingleResult<spVendasPorClienteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spClienteVip")]
		public int spClienteVip([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClienteId", DbType="Int")] System.Nullable<int> clienteId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clienteId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spProdutosMaisVendidosPorMes")]
		public ISingleResult<spProdutosMaisVendidosPorMesResult> spProdutosMaisVendidosPorMes([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuantidadeProdutos", DbType="Int")] System.Nullable<int> quantidadeProdutos)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), quantidadeProdutos);
			return ((ISingleResult<spProdutosMaisVendidosPorMesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spVendaCadastro")]
		public int spVendaCadastro([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClienteId", DbType="Int")] System.Nullable<int> clienteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Data", DbType="DateTime")] System.Nullable<System.DateTime> data, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendaId", DbType="Int")] ref System.Nullable<int> vendaId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clienteId, data, vendaId);
			vendaId = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spVendaProdutoCadastro")]
		public int spVendaProdutoCadastro([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendaId", DbType="Int")] System.Nullable<int> vendaId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProdutoId", DbType="Int")] System.Nullable<int> produtoId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantidade", DbType="Int")] System.Nullable<int> quantidade, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemNumero", DbType="Int")] ref System.Nullable<int> itemNumero)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendaId, produtoId, quantidade, itemNumero);
			itemNumero = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spVendasPorPeriodo")]
		public ISingleResult<spVendasPorPeriodoResult> spVendasPorPeriodo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DataInicio", DbType="DateTime")] System.Nullable<System.DateTime> dataInicio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DataFim", DbType="DateTime")] System.Nullable<System.DateTime> dataFim)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dataInicio, dataFim);
			return ((ISingleResult<spVendasPorPeriodoResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClienteId;
		
		private string _Nome;
		
		private System.Nullable<bool> _Vip;
		
		private EntitySet<Venda> _Vendas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClienteIdChanging(int value);
    partial void OnClienteIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnVipChanging(System.Nullable<bool> value);
    partial void OnVipChanged();
    #endregion
		
		public Cliente()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					this.OnClienteIdChanging(value);
					this.SendPropertyChanging();
					this._ClienteId = value;
					this.SendPropertyChanged("ClienteId");
					this.OnClienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Bit")]
		public System.Nullable<bool> Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this.OnVipChanging(value);
					this.SendPropertyChanging();
					this._Vip = value;
					this.SendPropertyChanged("Vip");
					this.OnVipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda", Storage="_Vendas", ThisKey="ClienteId", OtherKey="ClienteId")]
		internal EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendaProduto")]
	public partial class VendaProduto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendaId;
		
		private int _ItemNumero;
		
		private System.Nullable<int> _ProdutoId;
		
		private int _Quantidade;
		
		private decimal _Preco;
		
		private EntityRef<Produto> _Produto;
		
		private EntityRef<Venda> _Venda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendaIdChanging(int value);
    partial void OnVendaIdChanged();
    partial void OnItemNumeroChanging(int value);
    partial void OnItemNumeroChanged();
    partial void OnProdutoIdChanging(System.Nullable<int> value);
    partial void OnProdutoIdChanged();
    partial void OnQuantidadeChanging(int value);
    partial void OnQuantidadeChanged();
    partial void OnPrecoChanging(decimal value);
    partial void OnPrecoChanged();
    #endregion
		
		public VendaProduto()
		{
			this._Produto = default(EntityRef<Produto>);
			this._Venda = default(EntityRef<Venda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VendaId
		{
			get
			{
				return this._VendaId;
			}
			set
			{
				if ((this._VendaId != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendaIdChanging(value);
					this.SendPropertyChanging();
					this._VendaId = value;
					this.SendPropertyChanged("VendaId");
					this.OnVendaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumero", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemNumero
		{
			get
			{
				return this._ItemNumero;
			}
			set
			{
				if ((this._ItemNumero != value))
				{
					this.OnItemNumeroChanging(value);
					this.SendPropertyChanging();
					this._ItemNumero = value;
					this.SendPropertyChanged("ItemNumero");
					this.OnItemNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdutoId", DbType="Int")]
		public System.Nullable<int> ProdutoId
		{
			get
			{
				return this._ProdutoId;
			}
			set
			{
				if ((this._ProdutoId != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdutoIdChanging(value);
					this.SendPropertyChanging();
					this._ProdutoId = value;
					this.SendPropertyChanged("ProdutoId");
					this.OnProdutoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade", DbType="Int NOT NULL")]
		public int Quantidade
		{
			get
			{
				return this._Quantidade;
			}
			set
			{
				if ((this._Quantidade != value))
				{
					this.OnQuantidadeChanging(value);
					this.SendPropertyChanging();
					this._Quantidade = value;
					this.SendPropertyChanged("Quantidade");
					this.OnQuantidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Money NOT NULL")]
		public decimal Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_VendaProduto", Storage="_Produto", ThisKey="ProdutoId", OtherKey="ProdutoId", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.VendaProdutos.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.VendaProdutos.Add(this);
						this._ProdutoId = value.ProdutoId;
					}
					else
					{
						this._ProdutoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_VendaProduto", Storage="_Venda", ThisKey="VendaId", OtherKey="VendaId", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.VendaProdutos.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.VendaProdutos.Add(this);
						this._VendaId = value.VendaId;
					}
					else
					{
						this._VendaId = default(int);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fabricante")]
	public partial class Fabricante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FabricanteId;
		
		private string _Descricao;
		
		private EntitySet<Produto> _Produtos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFabricanteIdChanging(int value);
    partial void OnFabricanteIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Fabricante()
		{
			this._Produtos = new EntitySet<Produto>(new Action<Produto>(this.attach_Produtos), new Action<Produto>(this.detach_Produtos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FabricanteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FabricanteId
		{
			get
			{
				return this._FabricanteId;
			}
			set
			{
				if ((this._FabricanteId != value))
				{
					this.OnFabricanteIdChanging(value);
					this.SendPropertyChanging();
					this._FabricanteId = value;
					this.SendPropertyChanged("FabricanteId");
					this.OnFabricanteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fabricante_Produto", Storage="_Produtos", ThisKey="FabricanteId", OtherKey="FabricanteId")]
		internal EntitySet<Produto> Produtos
		{
			get
			{
				return this._Produtos;
			}
			set
			{
				this._Produtos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Fabricante = this;
		}
		
		private void detach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Fabricante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProdutoId;
		
		private string _Descricao;
		
		private int _FabricanteId;
		
		private int _QtdEstoque;
		
		private decimal _Preco;
		
		private EntitySet<VendaProduto> _VendaProdutos;
		
		private EntityRef<Fabricante> _Fabricante;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdutoIdChanging(int value);
    partial void OnProdutoIdChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnFabricanteIdChanging(int value);
    partial void OnFabricanteIdChanged();
    partial void OnQtdEstoqueChanging(int value);
    partial void OnQtdEstoqueChanged();
    partial void OnPrecoChanging(decimal value);
    partial void OnPrecoChanged();
    #endregion
		
		public Produto()
		{
			this._VendaProdutos = new EntitySet<VendaProduto>(new Action<VendaProduto>(this.attach_VendaProdutos), new Action<VendaProduto>(this.detach_VendaProdutos));
			this._Fabricante = default(EntityRef<Fabricante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdutoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProdutoId
		{
			get
			{
				return this._ProdutoId;
			}
			set
			{
				if ((this._ProdutoId != value))
				{
					this.OnProdutoIdChanging(value);
					this.SendPropertyChanging();
					this._ProdutoId = value;
					this.SendPropertyChanged("ProdutoId");
					this.OnProdutoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FabricanteId", DbType="Int NOT NULL")]
		public int FabricanteId
		{
			get
			{
				return this._FabricanteId;
			}
			set
			{
				if ((this._FabricanteId != value))
				{
					if (this._Fabricante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFabricanteIdChanging(value);
					this.SendPropertyChanging();
					this._FabricanteId = value;
					this.SendPropertyChanged("FabricanteId");
					this.OnFabricanteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtdEstoque", DbType="Int NOT NULL")]
		public int QtdEstoque
		{
			get
			{
				return this._QtdEstoque;
			}
			set
			{
				if ((this._QtdEstoque != value))
				{
					this.OnQtdEstoqueChanging(value);
					this.SendPropertyChanging();
					this._QtdEstoque = value;
					this.SendPropertyChanged("QtdEstoque");
					this.OnQtdEstoqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Money NOT NULL")]
		public decimal Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_VendaProduto", Storage="_VendaProdutos", ThisKey="ProdutoId", OtherKey="ProdutoId")]
		internal EntitySet<VendaProduto> VendaProdutos
		{
			get
			{
				return this._VendaProdutos;
			}
			set
			{
				this._VendaProdutos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fabricante_Produto", Storage="_Fabricante", ThisKey="FabricanteId", OtherKey="FabricanteId", IsForeignKey=true)]
		public Fabricante Fabricante
		{
			get
			{
				return this._Fabricante.Entity;
			}
			set
			{
				Fabricante previousValue = this._Fabricante.Entity;
				if (((previousValue != value) 
							|| (this._Fabricante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fabricante.Entity = null;
						previousValue.Produtos.Remove(this);
					}
					this._Fabricante.Entity = value;
					if ((value != null))
					{
						value.Produtos.Add(this);
						this._FabricanteId = value.FabricanteId;
					}
					else
					{
						this._FabricanteId = default(int);
					}
					this.SendPropertyChanged("Fabricante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VendaProdutos(VendaProduto entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_VendaProdutos(VendaProduto entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venda")]
	public partial class Venda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendaId;
		
		private int _ClienteId;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<decimal> _Total1;
		
		private System.Nullable<decimal> _Total2;
		
		private System.Nullable<decimal> _Desconto;
		
		private EntitySet<VendaProduto> _VendaProdutos;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendaIdChanging(int value);
    partial void OnVendaIdChanged();
    partial void OnClienteIdChanging(int value);
    partial void OnClienteIdChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnTotal1Changing(System.Nullable<decimal> value);
    partial void OnTotal1Changed();
    partial void OnTotal2Changing(System.Nullable<decimal> value);
    partial void OnTotal2Changed();
    partial void OnDescontoChanging(System.Nullable<decimal> value);
    partial void OnDescontoChanged();
    #endregion
		
		public Venda()
		{
			this._VendaProdutos = new EntitySet<VendaProduto>(new Action<VendaProduto>(this.attach_VendaProdutos), new Action<VendaProduto>(this.detach_VendaProdutos));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendaId
		{
			get
			{
				return this._VendaId;
			}
			set
			{
				if ((this._VendaId != value))
				{
					this.OnVendaIdChanging(value);
					this.SendPropertyChanging();
					this._VendaId = value;
					this.SendPropertyChanged("VendaId");
					this.OnVendaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", DbType="Int NOT NULL")]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIdChanging(value);
					this.SendPropertyChanging();
					this._ClienteId = value;
					this.SendPropertyChanged("ClienteId");
					this.OnClienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total1", DbType="Money")]
		public System.Nullable<decimal> Total1
		{
			get
			{
				return this._Total1;
			}
			set
			{
				if ((this._Total1 != value))
				{
					this.OnTotal1Changing(value);
					this.SendPropertyChanging();
					this._Total1 = value;
					this.SendPropertyChanged("Total1");
					this.OnTotal1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total2", DbType="Money")]
		public System.Nullable<decimal> Total2
		{
			get
			{
				return this._Total2;
			}
			set
			{
				if ((this._Total2 != value))
				{
					this.OnTotal2Changing(value);
					this.SendPropertyChanging();
					this._Total2 = value;
					this.SendPropertyChanged("Total2");
					this.OnTotal2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desconto", DbType="Money")]
		public System.Nullable<decimal> Desconto
		{
			get
			{
				return this._Desconto;
			}
			set
			{
				if ((this._Desconto != value))
				{
					this.OnDescontoChanging(value);
					this.SendPropertyChanging();
					this._Desconto = value;
					this.SendPropertyChanged("Desconto");
					this.OnDescontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_VendaProduto", Storage="_VendaProdutos", ThisKey="VendaId", OtherKey="VendaId")]
		internal EntitySet<VendaProduto> VendaProdutos
		{
			get
			{
				return this._VendaProdutos;
			}
			set
			{
				this._VendaProdutos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda", Storage="_Cliente", ThisKey="ClienteId", OtherKey="ClienteId", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._ClienteId = value.ClienteId;
					}
					else
					{
						this._ClienteId = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VendaProdutos(VendaProduto entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_VendaProdutos(VendaProduto entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwClientesVip")]
	public partial class vwClientesVip
	{
		
		private int _ClienteId;
		
		private string _Nome;
		
		private System.Nullable<bool> _Vip;
		
		public vwClientesVip()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					this._ClienteId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Bit")]
		public System.Nullable<bool> Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this._Vip = value;
				}
			}
		}
	}
	
	public partial class spVendasPorClienteResult
	{
		
		private int _VendaId;
		
		private int _ClienteId;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<decimal> _Total1;
		
		private System.Nullable<decimal> _Total2;
		
		private System.Nullable<decimal> _Desconto;
		
		public spVendasPorClienteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendaId", DbType="Int NOT NULL")]
		public int VendaId
		{
			get
			{
				return this._VendaId;
			}
			set
			{
				if ((this._VendaId != value))
				{
					this._VendaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", DbType="Int NOT NULL")]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					this._ClienteId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total1", DbType="Money")]
		public System.Nullable<decimal> Total1
		{
			get
			{
				return this._Total1;
			}
			set
			{
				if ((this._Total1 != value))
				{
					this._Total1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total2", DbType="Money")]
		public System.Nullable<decimal> Total2
		{
			get
			{
				return this._Total2;
			}
			set
			{
				if ((this._Total2 != value))
				{
					this._Total2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desconto", DbType="Money")]
		public System.Nullable<decimal> Desconto
		{
			get
			{
				return this._Desconto;
			}
			set
			{
				if ((this._Desconto != value))
				{
					this._Desconto = value;
				}
			}
		}
	}
	
	public partial class spProdutosMaisVendidosPorMesResult
	{
		
		private int _ProdutoId;
		
		private string _Produto;
		
		private string _Fabricante;
		
		private System.Nullable<int> _Vendidos;
		
		public spProdutosMaisVendidosPorMesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdutoId", DbType="Int NOT NULL")]
		public int ProdutoId
		{
			get
			{
				return this._ProdutoId;
			}
			set
			{
				if ((this._ProdutoId != value))
				{
					this._ProdutoId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Produto", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				if ((this._Produto != value))
				{
					this._Produto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fabricante", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Fabricante
		{
			get
			{
				return this._Fabricante;
			}
			set
			{
				if ((this._Fabricante != value))
				{
					this._Fabricante = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendidos", DbType="Int")]
		public System.Nullable<int> Vendidos
		{
			get
			{
				return this._Vendidos;
			}
			set
			{
				if ((this._Vendidos != value))
				{
					this._Vendidos = value;
				}
			}
		}
	}
	
	public partial class spVendasPorPeriodoResult
	{
		
		private int _VendaId;
		
		private int _ClienteId;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<decimal> _Total1;
		
		private System.Nullable<decimal> _Total2;
		
		private System.Nullable<decimal> _Desconto;
		
		public spVendasPorPeriodoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendaId", DbType="Int NOT NULL")]
		public int VendaId
		{
			get
			{
				return this._VendaId;
			}
			set
			{
				if ((this._VendaId != value))
				{
					this._VendaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", DbType="Int NOT NULL")]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					this._ClienteId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total1", DbType="Money")]
		public System.Nullable<decimal> Total1
		{
			get
			{
				return this._Total1;
			}
			set
			{
				if ((this._Total1 != value))
				{
					this._Total1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total2", DbType="Money")]
		public System.Nullable<decimal> Total2
		{
			get
			{
				return this._Total2;
			}
			set
			{
				if ((this._Total2 != value))
				{
					this._Total2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desconto", DbType="Money")]
		public System.Nullable<decimal> Desconto
		{
			get
			{
				return this._Desconto;
			}
			set
			{
				if ((this._Desconto != value))
				{
					this._Desconto = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
